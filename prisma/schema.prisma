generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @unique
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Session_ibfk_1")

  @@index([userId], map: "user_idx")
}

model User {
  id               String              @id @default(cuid())
  name             String              @unique
  email            String              @unique
  emailVerified    DateTime?
  image            String
  role             String              @default("guest")
  tgc_guild_member Boolean             @default(false)
  accounts         Account?
  sessions         Session[]
  eso              eso?
  ffxiv            ffxiv?
  posts            post[]
  post_mod         post_modification[]
  staff            staff?
  swtor            swtor?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model post {
  id          String             @id @default(cuid())
  title       String
  summary     String             @db.Text
  content     String             @db.LongText
  image       String?            @db.VarChar(255)
  timestamp   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  createdById String
  createdBy   User               @relation(fields: [createdById], references: [id])
  mod         post_modification?
  permissions post_permission?

  @@index([createdById], map: "post_createdById_fkey")
}

model post_permission {
  id           String  @id @default(cuid())
  postId       String  @unique
  guild_public Boolean @default(false)
  general      Boolean @default(false)
  member       Boolean @default(false)
  eso          Boolean @default(false)
  ffxiv        Boolean @default(false)
  swtor        Boolean @default(false)
  staff        Boolean @default(false)
  officer      Boolean @default(false)
  raid         Boolean @default(false)
  beginner     Boolean @default(false)
  intermediate Boolean @default(false)
  advanced     Boolean @default(false)
  published    Boolean @default(false)
  type         String
  post         post    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model post_modification {
  id          String  @id @default(cuid())
  ori_title   String
  ori_summary String  @db.Text
  ori_content String  @db.Text
  image       String? @db.Text
  postId      String  @unique
  published   String  @default("Published by modById")
  modById     String
  modBy       User    @relation(fields: [modById], references: [id])
  postRef     post    @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([modById], map: "post_modification_modById_fkey")
}

model eso {
  userId   String   @id @unique
  rank     String   @default("none")
  raid     Boolean? @default(false)
  raidlead Boolean? @default(false)
  mentor   Boolean? @default(false)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ffxiv {
  userId   String   @id @unique
  rank     String   @default("none")
  raid     Boolean? @default(false)
  raidlead Boolean? @default(false)
  mentor   Boolean? @default(false)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model swtor {
  userId   String   @id @unique
  rank     String   @default("none")
  raid     Boolean? @default(false)
  raidlead Boolean? @default(false)
  mentor   Boolean? @default(false)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model staff {
  userId         String   @id @unique
  admin          Boolean? @default(false)
  specialist     Boolean? @default(false)
  representative Boolean? @default(false)
  highcouncil    Boolean? @default(false)
  guildmaster    Boolean? @default(false)
  juniorofficer  Boolean? @default(false)
  officer        Boolean? @default(false)
  seniorofficer  Boolean? @default(false)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model discord_user {
  gmember_id        String       @id
  disc_nickname     String       @db.VarChar(255)
  ingame_name       String       @db.VarChar(255)
  highest_rank_role Int
  staff_duty        staff_duty[]
}

model staff_point_chart {
  task_id          Int          @id
  task_name        String       @db.VarChar(255)
  point_value      Int
  task_description String?      @db.Text
  staff_duty       staff_duty[]
}

model staff_duty {
  duty_uid          Int               @id @default(autoincrement())
  gmember_id        String            @db.VarChar(45)
  duty_type         Int
  timestamp         DateTime          @db.DateTime(0)
  target            Int?
  eso_target_user   String?           @db.VarChar(255)
  message_content   String?           @db.Text
  description       String?           @db.Text
  staff_point_chart staff_point_chart @relation(fields: [duty_type], references: [task_id], onUpdate: Restrict, map: "fk_duty_to_task")
  discord_user      discord_user      @relation(fields: [gmember_id], references: [gmember_id], onUpdate: Restrict, map: "fk_duty_to_user")

  @@index([duty_type], map: "fk_duty_to_task")
  @@index([gmember_id], map: "fk_duty_to_user")
}

model guild_names {
  guild_id   Int    @id
  guild_name String @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model staff_admin {
  task_uid      Int      @id @default(autoincrement())
  gmember_id    String
  duty_type     Int
  timestamp     DateTime @db.DateTime(0)
  action_target Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model staff_point_log {
  uid        Int      @id @default(autoincrement())
  gmember_id String
  cnt_points Int
  timestamp  DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model characters {
  character_uid Int     @id @default(autoincrement())
  gmember_id    String
  char_name     String  @db.VarChar(255)
  class_name    String? @db.VarChar(255)
  fact_id       Int?
  game_id       Int
  misc_info     String? @db.Text
  trial_parse   Int?
}

model audiences {
  audience_id   Int    @id @default(autoincrement())
  audience_name String @db.VarChar(255)
}

model build_audience_mapping {
  id          Int  @id @default(autoincrement())
  build_id    Int?
  audience_id Int?
}

model content_access {
  id         Int     @id @default(autoincrement())
  content_id Int?
  rank_role  String? @db.VarChar(255)
}

model content_types {
  type_id   Int    @id @default(autoincrement())
  type_name String @db.VarChar(255)
}

model contents {
  content_id Int      @id @default(autoincrement())
  gmember_id String?
  timestamp  DateTime @default(now()) @db.Timestamp(0)
  type_id    Int?
}

model discord_aliases {
  gmember_id      String
  alias_uid       Int     @id @default(autoincrement())
  alias_nickname  String? @db.VarChar(255)
  alias_disc_name String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model discord_join_leave {
  action_uid Int      @id @default(autoincrement())
  gmember_id String
  action     Int
  timestamp  DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model discord_message {
  message_uid  BigInt   @id @default(autoincrement())
  gmember_id   String
  nickname     String   @db.VarChar(255)
  channel_name String   @db.VarChar(255)
  content      String   @db.Text
  timestamp    DateTime @db.DateTime(0)
  old_content  String?  @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model eso_event {
  event_uid       Int      @id @default(autoincrement())
  gmember_id      String
  event_type      String   @db.VarChar(255)
  attendee_cnt    Int
  duration        Int
  revenue         Int
  start_timestamp DateTime @db.DateTime(0)
  notes           String   @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model eso_event_unqiue {
  event_uid    Int
  attendee_num Int    @id @default(autoincrement())
  gmember_id   String
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model eso_raid {
  gmember_id String
  trial      Int
  difficulty Int
  clears     Int
  wipes      Int
  duration   Int
  raid_uid   Int    @id @default(autoincrement())
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model eso_raid_unique {
  raid_uid     Int
  attendee_num Int    @id @default(autoincrement())
  gmember_id   String
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model eso_user {
  gmember_id  String
  eso_id      String @id @db.VarChar(255)
  tier_tank   Int?
  tier_healer Int?
  tier_dps    Int?
  parse       Int    @default(1)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model event_signups {
  event_id   Int
  gmember_id String
  role       Int?
  parse      Int
  signup_uid Int    @id @default(autoincrement())
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model events {
  event_id     Int      @id @default(autoincrement())
  event_type   String   @db.VarChar(255)
  date_time    DateTime @db.DateTime(0)
  duration     Int
  game         String   @db.VarChar(255)
  details      String   @db.Text
  gmember_id   String
  repeat_event Boolean?
  req_tank     Int?
  req_heal     Int?
  req_dps      Int?
  req_parse    Int?
}

model guide_audience_mapping {
  id          Int  @id @default(autoincrement())
  guide_id    Int?
  audience_id Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rank_role_mapping {
  rank_role_id Int     @id
  rank_role    String? @db.VarChar(60)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model situation_disciplinary {
  action_uid      Int      @id @default(autoincrement())
  gmember_id      String
  punish_type     Int
  probation_weeks Int?
  timestamp       DateTime @db.DateTime(0)
  report          String?  @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model situation_report {
  report_uid Int      @id @default(autoincrement())
  action_uid Int?
  timestamp  DateTime @db.DateTime(0)
  gmember_id String
  content    String   @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model staff_ff_swtor {
  task_uid   Int      @id @default(autoincrement())
  gmember_id String
  timestamp  DateTime @db.DateTime(0)
  duty_id    Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model staff_status_change {
  transaction_id     Int      @id @default(autoincrement())
  status_update      Int
  training_type      Int?
  trainer_gmember_id Int?
  timestamp          DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model voice_sessions {
  voice_session_id String    @id @db.VarChar(100)
  gmember_id       String?   @db.VarChar(45)
  channel_id       String?   @db.VarChar(45)
  start_time       DateTime? @db.DateTime(0)
  end_time         DateTime? @db.DateTime(0)
  duration         Float?    @db.Float
}

model article {
  article_id       BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title            String?  @db.VarChar(255)
  undertitle       String   @db.VarChar(255)
  content          String?  @db.Text
  cover_image_path String?  @db.VarChar(255)
  gmember_id       String?
  game_type        String?  @db.VarChar(50)
  summary          String?  @db.Text
  created_at       DateTime @default(now()) @db.Timestamp(0)
}

model articles {
  id               Int      @id @default(autoincrement())
  content_id       Int?
  title            String   @db.VarChar(255)
  content          String?  @db.Text
  timestamp        DateTime @default(now()) @db.Timestamp(0)
  cover_image_path String?  @db.VarChar(255)
  game_type        String?  @db.VarChar(255)
  summary          String?  @db.Text
}

model build {
  build_id         Int      @id @default(autoincrement())
  title            String?  @db.VarChar(255)
  content          String?  @db.Text
  cover_image_path String?  @db.VarChar(255)
  gmember_id       String?
  game_type        String?  @db.VarChar(50)
  summary          String?  @db.Text
  created_at       DateTime @default(now()) @db.Timestamp(0)
}

model builds {
  id               Int      @id @default(autoincrement())
  content_id       Int?
  title            String   @db.VarChar(255)
  content          String?  @db.Text
  timestamp        DateTime @default(now()) @db.Timestamp(0)
  cover_image_path String?  @db.VarChar(255)
  game_type        String?  @db.VarChar(255)
  summary          String?  @db.Text
}

model guides {
  id               Int      @id @default(autoincrement())
  content_id       Int?
  title            String   @db.VarChar(255)
  content          String?  @db.Text
  timestamp        DateTime @default(now()) @db.Timestamp(0)
  cover_image_path String?  @db.VarChar(255)
  game_type        String?  @db.VarChar(255)
  summary          String?  @db.Text
}

model parse_records {
  parse_uid     Int      @id @default(autoincrement())
  gmember_id    String   @db.VarChar(255)
  disc_nickname String?  @db.VarChar(255)
  char_name     String   @db.VarChar(255)
  class         Int
  damage        Int
  timestamp     DateTime @default(now()) @db.DateTime(0)
  patch_number  Int      @default(42)
}

model velothi_waivers {
  gmember_id    String   @db.VarChar(255)
  nickname      String?  @db.VarChar(255)
  waiver        Boolean?
  las           Decimal? @db.Decimal(10, 0)
  special_class Int?
  uid           Int      @id @default(autoincrement())
  record_date   DateTime @default(now()) @db.DateTime(0)
}

model voice_time {
  conn_uid        BigInt   @id @default(autoincrement())
  gmember_id      String   @db.VarChar(255)
  nick            String   @db.VarChar(255)
  connection_time DateTime @db.Time(6)
  new_channel     String?  @db.VarChar(255)
  old_channel     String?  @db.VarChar(255)
  n_users         String?  @db.Text
  o_users         String?  @db.Text
}

model mcmmo_cooldowns {
  user_id       Int @id @db.UnsignedInt
  taming        Int @default(0) @db.UnsignedInt
  mining        Int @default(0) @db.UnsignedInt
  woodcutting   Int @default(0) @db.UnsignedInt
  repair        Int @default(0) @db.UnsignedInt
  unarmed       Int @default(0) @db.UnsignedInt
  herbalism     Int @default(0) @db.UnsignedInt
  excavation    Int @default(0) @db.UnsignedInt
  archery       Int @default(0) @db.UnsignedInt
  swords        Int @default(0) @db.UnsignedInt
  axes          Int @default(0) @db.UnsignedInt
  acrobatics    Int @default(0) @db.UnsignedInt
  blast_mining  Int @default(0) @db.UnsignedInt
  chimaera_wing Int @default(0) @db.UnsignedInt
  crossbows     Int @default(0) @db.UnsignedInt
  tridents      Int @default(0) @db.UnsignedInt
  maces         Int @default(0) @db.UnsignedInt
}

model mcmmo_experience {
  user_id     Int @id @db.UnsignedInt
  taming      Int @default(0) @db.UnsignedInt
  mining      Int @default(0) @db.UnsignedInt
  woodcutting Int @default(0) @db.UnsignedInt
  repair      Int @default(0) @db.UnsignedInt
  unarmed     Int @default(0) @db.UnsignedInt
  herbalism   Int @default(0) @db.UnsignedInt
  excavation  Int @default(0) @db.UnsignedInt
  archery     Int @default(0) @db.UnsignedInt
  swords      Int @default(0) @db.UnsignedInt
  axes        Int @default(0) @db.UnsignedInt
  acrobatics  Int @default(0) @db.UnsignedInt
  fishing     Int @default(0) @db.UnsignedInt
  alchemy     Int @default(0) @db.UnsignedInt
  crossbows   Int @default(0) @db.UnsignedInt
  tridents    Int @default(0) @db.UnsignedInt
  maces       Int @default(0) @db.UnsignedInt
}

model mcmmo_huds {
  user_id        Int     @id @db.UnsignedInt
  mobhealthbar   String? @db.VarChar(50)
  scoreboardtips Int     @default(0)
}

model mcmmo_skills {
  user_id     Int @id @db.UnsignedInt
  taming      Int @default(0) @db.UnsignedInt
  mining      Int @default(0) @db.UnsignedInt
  woodcutting Int @default(0) @db.UnsignedInt
  repair      Int @default(0) @db.UnsignedInt
  unarmed     Int @default(0) @db.UnsignedInt
  herbalism   Int @default(0) @db.UnsignedInt
  excavation  Int @default(0) @db.UnsignedInt
  archery     Int @default(0) @db.UnsignedInt
  swords      Int @default(0) @db.UnsignedInt
  axes        Int @default(0) @db.UnsignedInt
  acrobatics  Int @default(0) @db.UnsignedInt
  fishing     Int @default(0) @db.UnsignedInt
  alchemy     Int @default(0) @db.UnsignedInt
  crossbows   Int @default(0) @db.UnsignedInt
  tridents    Int @default(0) @db.UnsignedInt
  maces       Int @default(0) @db.UnsignedInt
  total       Int @default(0) @db.UnsignedInt
}

model mcmmo_users {
  id        Int     @id @default(autoincrement())
  user      String? @db.VarChar(40)
  uuid      String? @unique(map: "uuid") @db.VarChar(36)
  lastlogin BigInt

  @@index([user], map: "user_index")
}

model minecraft_user {
  mc_uid             Int     @id @default(autoincrement())
  gmember_id         String? @db.VarChar(255)
  mc_name            String  @db.VarChar(255)
  disc_name          String? @db.VarChar(255)
  IP                 String  @db.VarChar(255)
  secret_key         String  @db.VarChar(255)
  total_play_seconds BigInt
  seconds_this_week  BigInt?
  last_seen          String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model rewards {
  id                                      String?  @db.VarChar(255)
  playTime                                BigInt?  @default(0)
  uses                                    BigInt?  @default(-1)
  votes                                   BigInt?  @default(0)
  referredTo                              String?  @db.TinyText
  join_notification                       Boolean? @default(true)
  live_notifications                      Boolean? @default(true)
  join_auto_claim                         Boolean? @default(false)
  exampleVoteRewardCollected              BigInt?  @default(0)
  exampleVoteReward                       BigInt?  @default(-1)
  exampleStreakRewardCollected            BigInt?  @default(0)
  exampleStreakReward                     BigInt?  @default(0)
  exampleStreakRewardCurrentStreak        BigInt?  @default(0)
  examplePurchasableRewardCollected       BigInt?  @default(0)
  examplePurchasableReward                BigInt?  @default(-1)
  exampleAdventCalendarCollected          BigInt?  @default(0)
  exampleAdventCalendar                   String?  @default("000000000000000000000000") @db.VarChar(255)
  exampleTimeLimitedRewardCollected       BigInt?  @default(0)
  exampleTimeLimitedReward                BigInt?  @default(0)
  exampleRenewablePlayTimeRewardCollected BigInt?  @default(0)
  exampleRenewablePlayTimeReward          BigInt?  @default(-1)
  exampleOneTimeRewardCollected           BigInt?  @default(0)
  exampleOneTimeReward                    BigInt?  @default(0)
  exampleStreakFixedRewardCollected       BigInt?  @default(0)
  exampleStreakFixedRewardCurrentStreak   String?  @db.TinyText
  exampleStreakFixedReward                String?  @db.TinyText
  exampleTimeRewardCollected              BigInt?  @default(0)
  exampleTimeReward                       BigInt?  @default(1717181630076)
  exampleTimeFixedRewardCollected         BigInt?  @default(0)
  exampleTimeFixedReward                  String?  @db.TinyText
  exampleRenewableVoteRewardCollected     BigInt?  @default(0)
  exampleRenewableVoteReward              BigInt?  @default(0)
  exampleStreakVoteRewardCollected        BigInt?  @default(0)
  exampleStreakVoteRewardVotes            BigInt?  @default(0)
  exampleStreakVoteReward                 BigInt?  @default(1717181632255)
  exampleStreakVoteRewardCurrentStreak    BigInt?  @default(0)
  exampleRePurchasableRewardCollected     BigInt?  @default(0)
  exampleRePurchasableReward              BigInt?  @default(1717181633048)
  exampleReferralRewardCollected          BigInt?  @default(0)
  exampleReferralReward                   BigInt?  @default(-1)
  examplePlayTimeRewardCollected          BigInt?  @default(0)
  examplePlayTimeReward                   BigInt?  @default(-1)
  exampleRenewableReferralRewardCollected BigInt?  @default(0)
  exampleRenewableReferralReward          BigInt?  @default(0)

  @@ignore
}
